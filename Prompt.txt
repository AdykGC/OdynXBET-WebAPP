------------------ Миграция ------------------
python3 manage.py makemigrations
python3 manage.py migrate



------------------ GIT ------------------
Добавление изменений:
git add .
git commit -m "Описание ваших изменений"

Получение последних изменений из удаленного репозитория:
git pull origin main

Отправка изменений на удаленный репозиторий:
git push origin main



------------------ Python3 ------------------
python3 manage.py runserver

http://127.0.0.1:8000/
http://127.0.0.1:8000/translator/
http://127.0.0.1:8000/chief-editor/




python3 manage.py createsuperuser
Superuser_1:   AGC  :  Adyk2004GameC
User_1:   FourZeroFour  :  Four0Four!






Views.py
def project_manager(request):
    projects = PM_Project.objects.all().order_by('-created_at')  # Retrieve all projects sorted by creation time
    user = request.user  # Get the current user
    translators = CustomUser.objects.filter(user_type='translator')
    activities = PM_Activity.objects.all().order_by('-created_at')  # Retrieve all activities sorted by creation time

    if request.method == 'POST':
        form = PM_ProjectForm(request.POST)
        if form.is_valid():
            # Save the project with the current user as the selected_translator
            project = form.save(commit=False)
            
            project.save()
            return redirect('project_manager_home')  # Redirect after successful form submission
    else:
        form = PM_ProjectForm()

    context = {
        'projects': projects,
        'user': user,
        'form': form,
        'translators': translators,
        'activities': activities  # Pass sorted activities to the template context
    }
    return render(request, 'project_manager_home.html', context)
def update_project(request, project_id):
    project = get_object_or_404(PM_Project, id=project_id)
    if request.method == 'POST':
        form = PM_ProjectForm(request.POST, instance=project)
        if form.is_valid():
            form.save()
            return redirect('project_manager_home')  # Replace with your actual home view
    else:
        form = PM_ProjectForm(instance=project)
    return render(request, 'edit_project.html', {'form': form})

urls.py
urlpatterns = [
    path("", views.handleregistration, name='registration'),
# Login-Registration
    path("success/", views.successful_register, name='successful_register'),
    path("login/", views.handlelogin, name='login'),  
    path("registration/", views.handleregistration, name='registration'),  

# Workers main pages
    path("translator/", views.translator_home, name='translator_home'),
    path("chief-editor/", views.chief_editor_home, name='chief_editor_home'),
    path('update_activity/<int:activity_id>/', views.update_activity, name='update_activity'),
    path('update_activity_2/<int:activity_id>/', views.update_activity_2, name='update_activity_2'),

# Managers main pages
    path("project-manager/", views.project_manager, name='project_manager_home'),
    path('project/update/<int:project_id>/', views.update_project, name='update_project'),
    path("project-manager-check/", views.create_activity, name='project_manager_check'),
    path('PM_update_activity/<int:activity_id>/', views.PM_update_activity, name='PM_update_activity'),
]

{% for PM_project in projects %}
    <!-- ... existing project list items ... -->
    <!-- Edit Project Modal -->
    <div class="modal fade" id="editProjectModal{{ project.id }}" tabindex="-1" aria-labelledby="editProjectModalLabel{{ project.id }}" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProjectModalLabel{{ project.id }}">Edit Project</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="{% url 'update_project' project.id %}">
                        {% csrf_token %}
                        <div class="mb-3">
                            <label for="projectName{{ project.id }}" class="form-label" style="font-family: Roboto">Project Name</label>
                            <input type="text" class="form-control" id="projectName{{ project.id }}" name="project_name" value="{{ project.project_name }}" style="font-family: Roboto">
                        </div>
                        <!-- Deadline Input -->
                        <div class="mb-3">
                            <label for="deadline" class="form-label" style="font-family: Roboto">Deadline</label>
                            <input type="date" class="form-control" id="deadline" name="deadline" style="font-family: Roboto">
                        </div>
                        <button type="submit" class="btn btn-primary" style="font-family: Roboto">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    {% endfor %}